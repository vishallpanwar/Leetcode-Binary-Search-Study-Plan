class Solution {
public:
    vector<int> findRightInterval(vector<vector<int>>& intervals) {
        int n = intervals.size();
        vector<int>v;
        unordered_map<int,int>mp;
        int idx = 0;
        for(auto it : intervals){
            v.push_back(it[0]);
            mp[it[0]] = idx;
            idx++;
        }
        sort(v.begin(),v.end());
        vector<int>ans(n,-1);
        for(int i = 0; i < n; i++){ 
            int e = intervals[i][1];
            auto it = lower_bound(v.begin(),v.end(),e);
            if(it != v.end()){
                int id = it-v.begin();
                ans[i] = mp[v[id]];
            }
        } 
        return ans;
    }
};
